// Code generated by protoc-gen-go. DO NOT EDIT.
// source: request.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f73548e33e655fe, []int{0}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetResponse struct {
	Body                 string   `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f73548e33e655fe, []int{1}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *GetResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type QueueRequest struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueueRequest) Reset()         { *m = QueueRequest{} }
func (m *QueueRequest) String() string { return proto.CompactTextString(m) }
func (*QueueRequest) ProtoMessage()    {}
func (*QueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f73548e33e655fe, []int{2}
}

func (m *QueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueRequest.Unmarshal(m, b)
}
func (m *QueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueRequest.Marshal(b, m, deterministic)
}
func (m *QueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueRequest.Merge(m, src)
}
func (m *QueueRequest) XXX_Size() int {
	return xxx_messageInfo_QueueRequest.Size(m)
}
func (m *QueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueueRequest proto.InternalMessageInfo

func (m *QueueRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type QueueResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueueResponse) Reset()         { *m = QueueResponse{} }
func (m *QueueResponse) String() string { return proto.CompactTextString(m) }
func (*QueueResponse) ProtoMessage()    {}
func (*QueueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f73548e33e655fe, []int{3}
}

func (m *QueueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueResponse.Unmarshal(m, b)
}
func (m *QueueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueResponse.Marshal(b, m, deterministic)
}
func (m *QueueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueResponse.Merge(m, src)
}
func (m *QueueResponse) XXX_Size() int {
	return xxx_messageInfo_QueueResponse.Size(m)
}
func (m *QueueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueueResponse proto.InternalMessageInfo

func (m *QueueResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "proto.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "proto.GetResponse")
	proto.RegisterType((*QueueRequest)(nil), "proto.QueueRequest")
	proto.RegisterType((*QueueResponse)(nil), "proto.QueueResponse")
}

func init() { proto.RegisterFile("request.proto", fileDescriptor_7f73548e33e655fe) }

var fileDescriptor_7f73548e33e655fe = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0xc1, 0x8e, 0x82, 0x30,
	0x10, 0x86, 0x17, 0x58, 0x36, 0xd9, 0x51, 0x88, 0x8e, 0x1c, 0x08, 0x31, 0x91, 0xf4, 0xe4, 0x89,
	0x83, 0x9a, 0xf8, 0x08, 0x9c, 0xc5, 0x37, 0x40, 0xe6, 0x40, 0x62, 0x2c, 0x0e, 0x2d, 0x89, 0x6f,
	0x6f, 0x6c, 0x4b, 0x44, 0x4f, 0x9d, 0x7e, 0xff, 0xfc, 0xff, 0xcc, 0x40, 0xc4, 0x74, 0xd7, 0xd4,
	0xab, 0xa2, 0x63, 0xa9, 0x24, 0x86, 0xe6, 0x11, 0x6b, 0x80, 0x92, 0x54, 0x65, 0x25, 0x8c, 0xc1,
	0x6f, 0x9b, 0xd4, 0xcb, 0xbd, 0xed, 0x7f, 0xe5, 0xb7, 0x8d, 0x38, 0xc2, 0xcc, 0xa8, 0x7d, 0x27,
	0x6f, 0x3d, 0x21, 0xc2, 0x6f, 0x2d, 0x9b, 0x87, 0x6b, 0x30, 0x35, 0x26, 0x10, 0x12, 0xb3, 0xe4,
	0xd4, 0x37, 0xd0, 0x7e, 0x44, 0x0e, 0xf3, 0x93, 0x26, 0x4d, 0x63, 0xf0, 0x02, 0x02, 0xcd, 0x57,
	0x67, 0x7c, 0x95, 0x62, 0x03, 0x91, 0xeb, 0x70, 0xe1, 0x5f, 0xb3, 0x77, 0x03, 0xc4, 0xce, 0x7d,
	0x26, 0x1e, 0xda, 0x0b, 0x61, 0x01, 0x41, 0x49, 0x0a, 0x97, 0xf6, 0x82, 0xe2, 0xbd, 0x77, 0x86,
	0x53, 0x64, 0xf3, 0xc4, 0x0f, 0x1e, 0x20, 0x34, 0x23, 0x70, 0xe5, 0xe4, 0xe9, 0x4a, 0x59, 0xf2,
	0x09, 0x47, 0x57, 0xfd, 0x67, 0xf0, 0xfe, 0x19, 0x00, 0x00, 0xff, 0xff, 0x15, 0xd2, 0x77, 0x52,
	0x30, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RequestServiceClient is the client API for RequestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RequestServiceClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Queue(ctx context.Context, in *QueueRequest, opts ...grpc.CallOption) (*QueueResponse, error)
}

type requestServiceClient struct {
	cc *grpc.ClientConn
}

func NewRequestServiceClient(cc *grpc.ClientConn) RequestServiceClient {
	return &requestServiceClient{cc}
}

func (c *requestServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/proto.RequestService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *requestServiceClient) Queue(ctx context.Context, in *QueueRequest, opts ...grpc.CallOption) (*QueueResponse, error) {
	out := new(QueueResponse)
	err := c.cc.Invoke(ctx, "/proto.RequestService/Queue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RequestServiceServer is the server API for RequestService service.
type RequestServiceServer interface {
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Queue(context.Context, *QueueRequest) (*QueueResponse, error)
}

func RegisterRequestServiceServer(s *grpc.Server, srv RequestServiceServer) {
	s.RegisterService(&_RequestService_serviceDesc, srv)
}

func _RequestService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RequestServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RequestService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RequestServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RequestService_Queue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RequestServiceServer).Queue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RequestService/Queue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RequestServiceServer).Queue(ctx, req.(*QueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RequestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.RequestService",
	HandlerType: (*RequestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _RequestService_Get_Handler,
		},
		{
			MethodName: "Queue",
			Handler:    _RequestService_Queue_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "request.proto",
}
